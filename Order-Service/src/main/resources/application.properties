spring.application.name=Order-Service

spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=admin
spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90
eureka.instance.hostname=localhost

server.port=8081

## Actuator Endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=5
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true


# Resilience4j Timeout Properties
resilience4j.timeLimiter.instances.inventory.timeoutDuration=3s

# Resilience4j retry Properties
resilience4j.retry.instances.inventory.max-Attempts=3
resilience4j.retry.instances.inventory.wait-Duration=5s

## Micrometer Tracing
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.tracing.zipkin.enabled=true
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.zipkin.serviceName=api-gateway

## Kafka Properties
spring.kafka.bootstrap-servers=localhost:9092
sprinf.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:org.sebastiandev.orderservice.event.OrderPlacedEvent
spring.kafka.consumer.group-id=notificationId

## Prometheus Actuator Metrics
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]